<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="blog">
	<select id="getBlogTitleLogo" parameterType="long"
		resultType="blogvo">
		<![CDATA[
			select title, logo from blog where user_no = #{value}
		]]>
	</select>


	<update id="updateAdminBasicInfo" parameterType="map">
		<![CDATA[
			update blog set title = #{blogVo.title}
		]]>
		<choose>
			<when test="blogVo.logo == null">
				where user_no = #{userNo}
			</when>

			<otherwise>
				,logo = #{blogVo.logo} where user_no = #{userNo}
			</otherwise>
		</choose>
	</update>



	<insert id="postWrite" parameterType="map">
		<![CDATA[
			insert into post values(null, #{blogVo.postTitle}, #{blogVo.contents}, now(), (select no from category where name = #{categoryName} and user_no = #{userNo}))
		]]>
	</insert>

	<select id="getCategoryName" parameterType="long"
		resultType="categoryvo">
		<![CDATA[
			select no, name from category where user_no = #{value};		
		]]>
	</select>
	
	<select id="getPostCount" parameterType="long" resultType="categoryvo">
		<![CDATA[
			select (select count(*) from post a where a.category_no = b.no) as postCount from category b where user_no = #{value}
		]]>
	</select>
	
	<select id="getAllPostLook" parameterType="long" resultType="categoryvo">
		<![CDATA[
			select no, name, (select count(*) from post a, category b where a.CATEGORY_NO = b.no and b.user_no = #{value}) as postCount from category a where a.name = '전체글보기' and a.user_no = #{value}
		]]>
	</select>

	<select id="getPostList" parameterType="map"
		resultType="postvo">
		<![CDATA[
			select no, title, contents, regDate, categoryNo 
				from (select no, title, content as contents, reg_date as regDate, category_no as categoryNo from post where category_no = #{categoryNo} and no > #{postNo} limit 0, #{firstQueryValue}) a 
					order by regDate desc
		]]>
	</select>
	
	<select id="getPostListSecond" parameterType="map"
		resultType="postvo">
		<![CDATA[
			select no, title, contents, regDate, categoryNo 
			from (select no, title, content as contents, reg_date as regDate, category_no as categoryNo from post where CATEGORY_NO = #{categoryNo} and no <= #{postNo} order by reg_date desc limit 0, #{secondQueryValue}) a 
			order by regDate desc
		]]>
	</select>

	<insert id="setCategory" parameterType="map">
		<![CDATA[
			insert into category values(null, #{categoryVo.name}, #{categoryVo.description}, now(), #{userNo})
		]]>

		<selectKey keyProperty="no" resultType="long" order="AFTER"> 
			<![CDATA[
				select last_insert_id()
			]]>
		</selectKey>
	</insert>

	<select id="getCategoryList" parameterType="long"
		resultType="categoryvo">
		<![CDATA[
			select no, name, (select count(*) from post where category_no = a.no) as 'postCount', description  from category a where user_no = #{userNo};    
		]]>
	</select>

	<select id="getMainPost" parameterType="long"
		resultType="postvo">
		<![CDATA[
			select title, content as contents from post where no = #{pathNo2}
		]]>
	</select>

	<select id="getUserNo" parameterType="string"
		resultType="uservo">
		<![CDATA[
			select no from user where id = #{id};
		]]>
	</select>

	<delete id="categoryDelete" parameterType="map">
		<![CDATA[
			delete from category 
			where no = #{categoryNo} and 
			user_no = #{userNo} and 
			(select count(*) from post where category_no = #{categoryNo}) = 0
		]]>
	</delete>
	
	<select id="getMaxPostNo" parameterType="long" resultType="Long">
		<![CDATA[
			select max(a.no) from post a, category b where a.category_no = b.no and a.CATEGORY_NO = #{categoryNo} and b.user_no = #{userNo}		
		]]>
	</select>
	
</mapper>